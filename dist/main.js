/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/css/styles.css":(e,t,l)=>{l.r(t)}},t={};function l(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,l),n.exports}l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{l.r(r);l("./src/css/styles.css");var e=document.querySelectorAll("#slides .slide"),t=0,s=setInterval(n,1e4);function n(){e[t].className="slide",t=(t+1)%e.length,e[t].className="slide showing"}var o=!0,a=document.getElementById("pause");a.onclick=function(){o?(a.innerHTML="Play",o=!1,clearInterval(s)):(a.innerHTML="Pause",o=!0,s=setInterval(n,1e4))};let c=["blue","cyan","red","gold","green","yellow","#10ff00"];const d=(e,t)=>{t=c.length-1;return e+Math.round(Math.random()*(t-e))};let u=document.getElementsByClassName("h1");setInterval((()=>{for(let e=0;e<u.length;e++)u[e].style.color=c[d(0)]}),3e3),console.log(c);let g=["blue","cyan","red","gold","green","yellow","orange"];let i=document.getElementsByClassName("letters");setInterval((()=>{for(let e=0;e<i.length;e++)i[e].style.color=g[d(0)]}),3e3),console.log(g)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,